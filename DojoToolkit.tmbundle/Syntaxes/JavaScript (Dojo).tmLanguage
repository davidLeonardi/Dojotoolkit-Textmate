<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>js </string>
	</array>
	<key>foldingStartMarker</key>
	<string>/\*\*|[\{\[]\s*$</string>
	<key>foldingStopMarker</key>
	<string>\*\*/|^\s*[\]\}]</string>
	<key>keyEquivalent</key>
	<string>^~J</string>
	<key>name</key>
	<string>JavaScript (Dojo)</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#comment</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#regexp</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#number</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#string</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#control</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#object</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#expression</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#array</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#constant</string>
		</dict>
		<dict>
			<key>match</key>
			<string>&lt;=|&gt;=|==|===|!=|!==|&lt;|&gt;</string>
			<key>name</key>
			<string>keyword.operator.comparison.js.dojo</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\=</string>
			<key>name</key>
			<string>keyword.operator.assignment.js.dojo</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>keyword operators that evaluate to True or False</string>
			<key>match</key>
			<string>(&amp;&amp;|\bin\b|!|\|\|)</string>
			<key>name</key>
			<string>keyword.operator.logical.js.dojo</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\+|\-|\*|\*\*|/|%|&lt;&lt;|&gt;&gt;|&amp;|\||\^|~</string>
			<key>name</key>
			<string>keyword.operator.arithmetic.js.dojo</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>array</key>
		<dict>
			<key>begin</key>
			<string>\[</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.array.begin.js.dojo</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\]</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.array.end.js.dojo</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
				<dict>
					<key>match</key>
					<string>,</string>
					<key>name</key>
					<string>punctuation.separator.array.js.dojo</string>
				</dict>
			</array>
		</dict>
		<key>bom_constant</key>
		<dict>
			<key>match</key>
			<string>\b(document|window)\b</string>
			<key>name</key>
			<string>support.constant.bom.js.dojo</string>
		</dict>
		<key>bom_function</key>
		<dict>
			<key>match</key>
			<string>\b(createElement|appendChild|insertBefore|replaceChild|removeChild)\b</string>
			<key>name</key>
			<string>support.function.bom.js.dojo</string>
		</dict>
		<key>bom_property</key>
		<dict>
			<key>match</key>
			<string>(?&lt;=\.)(innerHTML|childNodes|parentNode|nodeType|tagName|data)\b</string>
			<key>name</key>
			<string>support.constant.bom.js.dojo</string>
		</dict>
		<key>builtin_class</key>
		<dict>
			<key>match</key>
			<string>\b(Error)\b</string>
			<key>name</key>
			<string>support.class.js.dojo</string>
		</dict>
		<key>builtin_constant</key>
		<dict>
			<key>match</key>
			<string>\b(null|true|false)\b</string>
			<key>name</key>
			<string>constant.language.js.dojo</string>
		</dict>
		<key>builtin_function</key>
		<dict>
			<key>match</key>
			<string>\b(replace|exec|split|push|pop|shift|unshift|slice|splice|concat|join|call|apply|hasOwnProperty|toLowerCase|toUpperCase)\b</string>
			<key>name</key>
			<string>support.function.builtin.js.dojo</string>
		</dict>
		<key>builtin_global_function</key>
		<dict>
			<key>match</key>
			<string>\b(setTimeout|setInterval)\b</string>
			<key>name</key>
			<string>support.function.builtin.js.dojo</string>
		</dict>
		<key>builtin_property</key>
		<dict>
			<key>match</key>
			<string>(?&lt;=\.)(length|constructor|prototype)\b</string>
			<key>name</key>
			<string>support.constant.builtin.js.dojo</string>
		</dict>
		<key>builtin_variable</key>
		<dict>
			<key>match</key>
			<string>\b(this|arguments)\b</string>
			<key>name</key>
			<string>variable.language.js.dojo</string>
		</dict>
		<key>call_body</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\(</string>
					<key>end</key>
					<string>(?=\))</string>
					<key>name</key>
					<string>meta.call.arguments.js.dojo</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?:(try|else|finally)|\))\s*\{</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.flow.js.dojo</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>meta.call.block.js.dojo</string>
					<key>end</key>
					<string>(?=})</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>comment</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.js.dojo</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(//).*?$</string>
					<key>name</key>
					<string>comment.line.double-slash.js.dojo</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?&lt;!/)/\*</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.begin.js.dojo</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\*/</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.end.js.dojo</string>
						</dict>
					</dict>
					<key>name</key>
					<string>comment.block.slash-asterisk.js.dojo</string>
				</dict>
			</array>
		</dict>
		<key>constant</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#magic_variable_names</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#builtin_constant</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#builtin_class</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#builtin_variable</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#bom_constant</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#dojo_constant</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#bom_property</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#dojo_property</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#builtin_property</string>
				</dict>
			</array>
		</dict>
		<key>control</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>([a-zA-Z_$][\w_$]*)\s*(=)\s*(d[\w_$]*\.extend)\s*(?=\(\s*function\b)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.type.class.js.dojo</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.assignment.js.dojo</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>support.function.dojo.js.dojo</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)(?!\s*\{)|\}</string>
					<key>name</key>
					<string>meta.class.dojo.js.dojo</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#call_body</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\b(d[\w_$]*\.extend)\s*(?=\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.dojo.js.dojo</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)(?!\s*\{)|\}</string>
					<key>name</key>
					<string>meta.class.dojo.js.dojo</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>\(</string>
							<key>end</key>
							<string>(?=\))</string>
							<key>name</key>
							<string>meta.call.arguments.js.dojo</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>captures</key>
									<dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>entity.name.type.class.js.dojo</string>
										</dict>
										<key>2</key>
										<dict>
											<key>name</key>
											<string>punctuation.separator.arguments.js.dojo</string>
										</dict>
									</dict>
									<key>match</key>
									<string>\b([a-zA-Z_$][\w_$]*)\s*(,)</string>
								</dict>
								<dict>
									<key>include</key>
									<string>$self</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\b(d[\w_$]*\.declare)\s*(?=\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.dojo.js.dojo</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)(?!\s*\{)|\}</string>
					<key>name</key>
					<string>meta.class.dojo.js.dojo</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>\(</string>
							<key>end</key>
							<string>(?=\))</string>
							<key>name</key>
							<string>meta.call.arguments.js.dojo</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>begin</key>
									<string>"</string>
									<key>beginCaptures</key>
									<dict>
										<key>0</key>
										<dict>
											<key>name</key>
											<string>punctuation.definition.string.begin.js.dojo</string>
										</dict>
									</dict>
									<key>contentName</key>
									<string>entity.name.type.class.js.dojo</string>
									<key>end</key>
									<string>(")|(\n)</string>
									<key>endCaptures</key>
									<dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>punctuation.definition.string.end.js.dojo</string>
										</dict>
										<key>2</key>
										<dict>
											<key>name</key>
											<string>invalid.illegal.unclosed-string.js.dojo</string>
										</dict>
									</dict>
									<key>name</key>
									<string>string.quoted.double.js.dojo</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#escaped_char</string>
										</dict>
									</array>
								</dict>
								<dict>
									<key>include</key>
									<string>$self</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\b(for|if|while|catch|switch)\s*(?=\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.flow.js.dojo</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)(?!\s*\{)|\}</string>
					<key>name</key>
					<string>meta.control-call.js.dojo</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#call_body</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\b(?=(?:try|else|finally)\s*\{)</string>
					<key>end</key>
					<string>\}</string>
					<key>name</key>
					<string>meta.control-call.js.dojo</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#call_body</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\b(function)\s*([a-zA-Z_$][\w_$]*)\s*(?=\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.function.js.dojo</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.js</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)(?!\s*\{)|\}</string>
					<key>name</key>
					<string>meta.function-declare.named.js.dojo</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>\(</string>
							<key>end</key>
							<string>(?=\))</string>
							<key>name</key>
							<string>meta.call.arguments.js.dojo</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#comment</string>
								</dict>
								<dict>
									<key>match</key>
									<string>,</string>
									<key>name</key>
									<string>punctuation.separator.parameters.js.dojo</string>
								</dict>
								<dict>
									<key>match</key>
									<string>[a-zA-Z_$][\w_$]*</string>
									<key>name</key>
									<string>variable.argument.js.dojo</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#call_body</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>include</key>
							<string>#call_body</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>[a-z_$][\w_$]*(?=\s*=\s*function\b)</string>
					<key>name</key>
					<string>entity.name.function.js.dojo</string>
				</dict>
				<dict>
					<key>match</key>
					<string>[A-Z_$][\w_$]*(?=\s*=\s*function\b)</string>
					<key>name</key>
					<string>entity.name.type.class.js.dojo</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>\b(?:(new)\s+)?(function)\s*(?=\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.magic.js.dojo</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>storage.type.function.js.dojo</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)(?!\s*\{)|\}</string>
					<key>name</key>
					<string>meta.function-declare.anonymous.js.dojo</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>\(</string>
							<key>end</key>
							<string>(?=\))</string>
							<key>name</key>
							<string>meta.call.arguments.js.dojo</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#comment</string>
								</dict>
								<dict>
									<key>match</key>
									<string>,</string>
									<key>name</key>
									<string>punctuation.separator.parameters.js.dojo</string>
								</dict>
								<dict>
									<key>match</key>
									<string>[a-zA-Z_$][\w_$]*</string>
									<key>name</key>
									<string>variable.argument.js.dojo</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#call_body</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>include</key>
							<string>#call_body</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\b(new)\s+(?=[A-Za-z_$][\w_$]*(?:\.[A-Za-z_$][\w_$]*)*\s*\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.magic.js.dojo</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>name</key>
					<string>meta.class-call.js.dojo</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#dotted_name</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#call_body</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\b(?=[A-Za-z_$][\w_$]*(?:\.[A-Za-z_$][\w_$]*)*\s*\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.function.js.dojo</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>name</key>
					<string>meta.function-call.js.dojo</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#dotted_name</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#call_body</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?&lt;=^|\)|\])(?=\s*\.[A-Za-z_$][\w_$]*(?:\.[A-Za-z_$][\w_$]*)*\s*\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.function.js.dojo</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>name</key>
					<string>meta.function-call.js.dojo</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#dotted_name</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#call_body</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>\belse\b</string>
					<key>name</key>
					<string>keyword.control.flow.js.dojo</string>
				</dict>
			</array>
		</dict>
		<key>dojo_constant</key>
		<dict>
			<key>match</key>
			<string>\b(dojo(\.(isBrowser|isIE|isSafari))?|dojox(\.(dtl)))\b</string>
			<key>name</key>
			<string>support.constant.dojo.js.dojo</string>
		</dict>
		<key>dojo_function</key>
		<dict>
			<key>match</key>
			<string>\b(dojo(\.(delegate|indexOf|is(String|Function|Array|ArrayLike|Object)|provide|require|requireIf|trim))?)\b</string>
			<key>name</key>
			<string>support.function.dojo.js.dojo</string>
		</dict>
		<key>dojo_property</key>
		<dict>
			<key>match</key>
			<string>\b(domNode)\b</string>
			<key>name</key>
			<string>support.constant.dojo.js.dojo</string>
		</dict>
		<key>dotted_name</key>
		<dict>
			<key>begin</key>
			<string>(?=\.?[A-Za-z_$][\w_$]*(?:\.[A-Za-z_$][\w_$]*)*)</string>
			<key>end</key>
			<string>(?![\w_$\.])</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#dojo_function</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(\.)(?=[A-Za-z_$][\w_$]*)</string>
					<key>comment</key>
					<string>Everything after the starting name</string>
					<key>end</key>
					<string>(?![\w_$])</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#bom_property</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#dojo_property</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#builtin_function</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#bom_function</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#illegal_names</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?&lt;!\.)(?=[A-Za-z_$][\w_$]*)</string>
					<key>comment</key>
					<string>The starting name (global)</string>
					<key>end</key>
					<string>(?![\w_$])</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#builtin_global_function</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#builtin_variable</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#magic_variable_names</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#builtin_class</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#bom_constant</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#illegal_names</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>escaped_char</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.unicode.js.dojo</string>
				</dict>
				<key>10</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.linefeed.js.dojo</string>
				</dict>
				<key>11</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.return.js.dojo</string>
				</dict>
				<key>12</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.tab.js.dojo</string>
				</dict>
				<key>13</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.vertical-tab.js.dojo</string>
				</dict>
				<key>14</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.null.js.dojo</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.hex.js.dojo</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.octal.js.dojo</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.newline.js.dojo</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.backlash.js.dojo</string>
				</dict>
				<key>6</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.double-quote.js.dojo</string>
				</dict>
				<key>7</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.single-quote.js.dojo</string>
				</dict>
				<key>8</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.backspace.js.dojo</string>
				</dict>
				<key>9</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.formfeed.js.dojo</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(\\u[0-9A-F]{4})|(\\x[0-9A-F]{2})|(\\[0-7]{3})|(\\\n)|(\\\\)|(\\\")|(\\')|(\\b)|(\\f)|(\\n)|(\\r)|(\\t)|(\\v)|(\\O)</string>
		</dict>
		<key>expression</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\(</string>
					<key>end</key>
					<string>\)</string>
					<key>name</key>
					<string>meta.structure.expression.js.dojo</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>illegal_names</key>
		<dict>
			<key>match</key>
			<string>\b(class)\b</string>
			<key>name</key>
			<string>invalid.illegal.name.js.dojo</string>
		</dict>
		<key>magic_variable_names</key>
		<dict>
			<key>match</key>
			<string>\b(var|return|delete|throw|typeof|continue|break|case|default)\b</string>
			<key>name</key>
			<string>support.function.magic.js.dojo</string>
		</dict>
		<key>number</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b(?i:(0x\h*))</string>
					<key>name</key>
					<string>constant.numeric.integer.hexadecimal.js.dojo</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(0[0-7]+)</string>
					<key>name</key>
					<string>constant.numeric.integer.octal.js.dojo</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(?i:(((\d+(\.(?=[^a-zA-Z_])\d*)?|(?&lt;=[^0-9a-zA-Z_])\.\d+)(e[\-\+]?\d+)?))J)</string>
					<key>name</key>
					<string>constant.numeric.complex.js.dojo</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(?i:(\d+\.\d*(e[\-\+]?\d+)?))(?=[^a-zA-Z_])</string>
					<key>name</key>
					<string>constant.numeric.float.js.dojo</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;=[^0-9a-zA-Z_])(?i:(\.\d+(e[\-\+]?\d+)?))</string>
					<key>name</key>
					<string>constant.numeric.float.js.dojo</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(?i:(\d+e[\-\+]?\d+))</string>
					<key>name</key>
					<string>constant.numeric.float.js.dojo</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b([1-9]+[0-9]*|0)</string>
					<key>name</key>
					<string>constant.numeric.integer.decimal.js.dojo</string>
				</dict>
			</array>
		</dict>
		<key>object</key>
		<dict>
			<key>begin</key>
			<string>\{</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.dictionary.begin.js.dojo</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\}</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.dictionary.end.js.dojo</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.structure.dictionary.js.dojo</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.js.dojo</string>
						</dict>
					</dict>
					<key>match</key>
					<string>'([a-zA-Z_$][\w_$]*)'(?=\s*:\s*function\b)</string>
					<key>name</key>
					<string>string.quoted.single.js.dojo</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.js.dojo</string>
						</dict>
					</dict>
					<key>match</key>
					<string>"([a-zA-Z_$][\w_$]*)"(?=\s*:\s*function\b)</string>
					<key>name</key>
					<string>string.quoted.double.js.dojo</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>'</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.js.dojo</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>meta.structure.dictionary.key.js.dojo</string>
					<key>end</key>
					<string>'</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.js.dojo</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.single.js.dojo</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#escaped_char</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>"</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.js.dojo</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>meta.structure.dictionary.key.js.dojo</string>
					<key>end</key>
					<string>(")|(\n)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.js.dojo</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.unclosed-string.js.dojo</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.double.js.dojo</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#escaped_char</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>\b[a-zA-Z_$][\w_$]*(?=\s*:\s*function\b)</string>
					<key>name</key>
					<string>entity.name.function.js.dojo</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.integer.decimal.js.dojo</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\b(?:[a-zA-Z_$][\w_$]*|([0-9]+))\b</string>
					<key>name</key>
					<string>meta.structure.dictionary.key.js.dojo</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>:</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.dictionary.key-value.js.dojo</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(,)|(?=\})</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.dictionary.pair.js.dojo</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.structure.dictionary.value.js.dojo</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#comment</string>
				</dict>
				<dict>
					<key>match</key>
					<string>[^\s\}]</string>
					<key>name</key>
					<string>invalid.illegal.expected-dictionary-separator.js.dojo</string>
				</dict>
			</array>
		</dict>
		<key>regexp</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;=[=(:]|^|return)\s*(/)(?![/*+{}?])</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.regexp.begin.js.dojo</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(/)([igm]*)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.regexp.end.js.dojo</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.other.option-toggle.regexp.js.dojo</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.regexp.literal.js.dojo</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#regexp_constant</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(new)\s+(RegExp)\s*(\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.magic.js.dojo</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>storage.type.class.js.dojo</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>name</key>
					<string>meta.class-call.js.dojo</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>captures</key>
							<dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.string.double.begin.js.dojo</string>
								</dict>
								<key>3</key>
								<dict>
									<key>name</key>
									<string>keyword.other.option-toggle.regexp.js.dojo</string>
								</dict>
								<key>4</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.string.double.end.js.dojo</string>
								</dict>
							</dict>
							<key>match</key>
							<string>(,)\s*(")([igm]+)(")</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.string.single.begin.js.dojo</string>
								</dict>
								<key>3</key>
								<dict>
									<key>name</key>
									<string>keyword.other.option-toggle.regexp.js.dojo</string>
								</dict>
								<key>4</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.string.single.end.js.dojo</string>
								</dict>
							</dict>
							<key>match</key>
							<string>(,)\s*(')([igm]+)(')</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>"</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.regexp.double.begin.js.dojo</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?&lt;!\\)(")</string>
							<key>endCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.regexp.double.end.js.dojo</string>
								</dict>
							</dict>
							<key>name</key>
							<string>string.regexp.quoted.double.js.dojo</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#regexp_constant</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>'</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.regexp.single.begin.js.dojo</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?&lt;!\\)(')</string>
							<key>endCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.regexp.single.end.js.dojo</string>
								</dict>
							</dict>
							<key>name</key>
							<string>string.regexp.quoted.single.js.dojo</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#regexp_constant</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>regexp_constant</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\[bB]|\^|\$</string>
					<key>name</key>
					<string>keyword.control.anchor.regexp.js.dojo</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\\[1-9][0-9]*</string>
					<key>name</key>
					<string>keyword.other.back-reference.regexp.js.dojo</string>
				</dict>
				<dict>
					<key>match</key>
					<string>[?+*][?+]?|\{(\d+,\d+|\d+,|\d+)\}\??</string>
					<key>name</key>
					<string>keyword.operator.quantifier.regexp.js.dojo</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\|</string>
					<key>name</key>
					<string>keyword.operator.or.regexp.js.dojo</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(\()((\?=)|(\?!))</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.group.regexp.js.dojo</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.group.assertion.regexp.js.dojo</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>meta.assertion.look-ahead.regexp.js.dojo</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>meta.assertion.negative-look-ahead.regexp.js.dojo</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\))</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.group.regexp.js.dojo</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.group.assertion.regexp.js.dojo</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#regexp_constant</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#regexp_constant_character</string>
				</dict>
			</array>
		</dict>
		<key>regexp_constant_character</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\[wWsSdD]|\.</string>
					<key>name</key>
					<string>constant.character.character-class.regexp.js.dojo</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\\.</string>
					<key>name</key>
					<string>constant.character.escape.backslash.regexp.js.dojo</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(\[)(\^)?</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.character-class.regexp.js.dojo</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.negation.regexp.js.dojo</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\])</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.character-class.regexp.js.dojo</string>
						</dict>
					</dict>
					<key>name</key>
					<string>constant.other.character-class.set.regexp.js.dojo</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>\[</string>
							<key>name</key>
							<string>constant.other.character-class.range.regexp.js.dojo</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#regexp_constant_character</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>constant.character.escape.backslash.regexp.js.dojo</string>
								</dict>
								<key>4</key>
								<dict>
									<key>name</key>
									<string>constant.character.escape.backslash.regexp.js.dojo</string>
								</dict>
							</dict>
							<key>match</key>
							<string>((\\.)|.)\-((\\.)|[^\]])</string>
							<key>name</key>
							<string>constant.other.character-class.range.regexp.js.dojo</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>string</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#string_quoted_single</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string_quoted_double</string>
				</dict>
			</array>
		</dict>
		<key>string_quoted_double</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>"</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.js.dojo</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>double quoted string</string>
					<key>end</key>
					<string>((?&lt;=")(")|")|(\n)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.js.dojo</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.empty-string.double.js.dojo</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.unclosed-string.js.dojo</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.double.js.dojo</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#escaped_char</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>string_quoted_single</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>'</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.js.dojo</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>single quoted string</string>
					<key>end</key>
					<string>(')|(\n)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.js.dojo</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.unclosed-string.js.dojo</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.single.js.dojo</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#escaped_char</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.js.dojo</string>
	<key>uuid</key>
	<string>93D43943-46F9-44D7-8560-1942226D1C62</string>
</dict>
</plist>
